app:
  title: Backstage Jingood2 App
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  baseUrl: http://localhost:3000

auth:
  environment: development
  ### Providing an auth.session.secret will enable session support in the auth-backend
  # session:
  #   secret: custom session secret
  providers:
    github:
      development:
        clientId: Iv1.062bb2b9e02cb9d8
        clientSecret: 88bebba8a668f53f8dd9b0976fd5bc32594ce4c8 

organization:
  name: My Company

integrations:
  github:
    - host: github.com
      token:
        $env: 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

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: http://localhost:7007
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen: ':7007'

  # config options: https://node-postgres.com/api/client
  database:
    client: better-sqlite3
    connection: ':memory:'
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt

techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker'

#catalog:
  # Overrides the default list locations from app-config.yaml as these contain example data.
  # See https://backstage.io/docs/features/software-catalog/#adding-components-to-the-catalog for more details
  # on how to get entities into the catalog.
#  locations: []

catalog:
  #import:
  #  entityFilename: catalog-info.yaml
  #  pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location, Template]

  locations:
    ## Uncomment these lines to add more example data
     - type: url
       target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
     - type: url
       target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
       rules:
         - allow: [User, Group]
